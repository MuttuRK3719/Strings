// IP address 1108
public String defangIPaddr(String address) {
        StringBuilder sb=new StringBuilder();
        for(int i=0;i<address.length();i++){
            char ch=address.charAt(i);
            if(ch=='.'){
                sb.append("[.]");
            }
            else sb.append(ch);
        }
        return new String(sb);
    }
https://leetcode.com/problems/decrypt-string-from-alphabet-to-integer-mapping/
  public String freqAlphabets(String s) {
        StringBuilder sb=new StringBuilder();
    for(int i=s.length()-1;i>=0;i--){
        char ch=s.charAt(i);
        int n=0;
        if(ch=='#'){
            n+=s.charAt(--i)-'0';
            n=10*(s.charAt(--i)-'0')+n;
            sb.append((char)(n+96));
        }
        else{
            sb.append((char)(96+ch-'0'));
        }
    }
    return sb.reverse().toString();
    }

https://leetcode.com/problems/number-of-strings-that-appear-as-substrings-in-word/
  public int numOfStrings(String[] patterns, String word) {
        int count=0;
    for(int i=0;i<patterns.length;i++){
        
        if(word.indexOf(patterns[i])>=0) count++;
    }
    return count;
    }
